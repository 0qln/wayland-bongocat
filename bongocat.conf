# Bongo Cat Configuration File
# Edit these values to customize your bongo cat overlay

# Position settings (in pixels)
# cat_x_offset: Horizontal offset from center position
# Positive values move right, negative values move left
cat_x_offset=120

# cat_y_offset: Vertical offset from default position
# Positive values move down, negative values move up
cat_y_offset=0

# Size settings
# cat_height: Height of the bongo cat in pixels
# Width is automatically calculated to maintain aspect ratio
cat_height=50

# Overlay settings
# overlay_height: Height of the entire overlay bar
overlay_height=60

# NOTE: DOESN'T WORK WITH HOT RELOAD, NEEDS BONGOCAT RESTART
# overlay_position: Position of the overlay on screen
# Options: "top" or "bottom"
overlay_position=top

# Animation settings
# idle_frame: Which frame to use when idle (0, 1, or 2)
# 0 = both paws up, 1 = left paw down, 2 = right paw down
idle_frame=0

# Animation timing (in milliseconds)
# keypress_duration: How long to show animation after keypress
keypress_duration=100

# test_animation_duration: How long to show test animation
test_animation_duration=200

# test_animation_interval: How often to trigger test animation (seconds)
# Set to 0 to disable test animations
test_animation_interval=0

# Frame rate settings
# fps: Animation frame rate (frames per second)
fps=60

# Transparency settings
# overlay_opacity: Opacity of the overlay background (0-255)
# 0 = fully transparent, 255 = fully opaque
overlay_opacity=150

# Fast Opacity-Based Fullscreen Hiding
# The overlay stays on OVERLAY layer but becomes transparent when fullscreen is detected.
#
# Strategy:
# - Layer: Always OVERLAY (appears above bars/panels like waybar, quickshell)
# - Normal: Full opacity (visible above bars/panels)
# - Fullscreen detected: Opacity = 0 (completely invisible)
# - Fullscreen exits: Restore normal opacity (visible again)
#
# Detection Methods (in order of preference):
# 1. Wayland Protocol: Uses wlr-foreign-toplevel-management-v1 for instant, universal detection
# 2. Compositor Fallback: Uses hyprctl/swaymsg for compositors without the protocol
#
# Performance:
# - Protocol-based: Instant hiding (event-driven, no polling)
# - Fallback: 50ms polling for fast response
# - No layer switching overhead - just opacity changes
#
# Compatibility:
# - Protocol: All wlroots-based compositors (Hyprland, Sway, etc.)
# - Fallback: Hyprland, Sway specifically
# - Works with any layer shell version (no protocol v2 requirement)
#
# This provides the best of both worlds:
# - Always visible above bars/panels when not in fullscreen
# - Instantly becomes invisible during fullscreen applications (games, videos, etc.)
# - Simpler and more compatible than layer switching
#
# No configuration needed - this behavior is automatic!
# Debug settings
# enable_debug: Show debug messages (0 = off, 1 = on)
enable_debug=1

# Input devices (you can specify multiple devices)
# Use keyboard_device for each device you want to monitor
# Examples:
keyboard_device=/dev/input/event4
keyboard_device=/dev/input/event20  # External bluetooth keyboard
# keyboard_device=/dev/input/event5   # Another input device

# To find your input devices, run: ls -la /dev/input/
# Or use: cat /proc/bus/input/devices
# Or use: sudo evtest (to see which devices generate events)
